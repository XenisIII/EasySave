<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SettingsLabel" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsViewApply" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="SettingsViewLogType" xml:space="preserve">
    <value>Log File Format</value>
  </data>
  <data name="SettingsViewLanguage" xml:space="preserve">
    <value>Language Choice</value>
  </data>
  <data name="SideBarAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="SideBarHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="SideBarSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SideBarHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HomeViewName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="HomeViewSrc" xml:space="preserve">
    <value>Source Path</value>
  </data>
  <data name="HomeViewDest" xml:space="preserve">
    <value>Destination Path</value>
  </data>
  <data name="HomeViewType" xml:space="preserve">
    <value>Backup Type</value>
  </data>
  <data name="HomeViewAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="HomeViewDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="HomeViewExecute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="HomeViewLogs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="HelpViewUserDoc" xml:space="preserve">
    <value>User Documentation:</value>
  </data>
  <data name="HelpViewUserDocText" xml:space="preserve">
    <value>For a complete understanding of EasySave's features and detailed instructions on how to use the software, please consult our complete user documentation. Download the guide in PDF format by clicking the link below to get started easily with EasySave.</value>
  </data>
  <data name="HelpViewDownloadUserDoc" xml:space="preserve">
    <value>Download User Documentation</value>
  </data>
  <data name="HelpViewNeedAssist" xml:space="preserve">
    <value>Need assistance?</value>
  </data>
  <data name="HelpViewNeedAssistText" xml:space="preserve">
    <value>If you have any questions or encounter any difficulties with EasySave, our dedicated support team is here to help. Do not hesitate to contact us for any technical assistance or questions regarding the use of EasySave. We are committed to providing the necessary help to ensure an optimal user experience.</value>
  </data>
  <data name="HelpViewNeedAssistMail" xml:space="preserve">
    <value>Send us an email at: support@prosoft.com</value>
  </data>
  <data name="HelpViewHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="CreateSaveViewTitle" xml:space="preserve">
    <value>Backup Creation</value>
  </data>
  <data name="CreateSaveViewBrowse" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="CreateSaveViewCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CreateSaveViewSaveQuit" xml:space="preserve">
    <value>Save and Quit</value>
  </data>
  <data name="CreateSaveViewSaveCreate" xml:space="preserve">
    <value>Save and Create New</value>
  </data>
  <data name="CreateSaveViewExt" xml:space="preserve">
    <value>File Extensions to Encrypt</value>
  </data>
  <data name="CreateSaveViewDestPath" xml:space="preserve">
    <value>Destination Path</value>
  </data>
  <data name="CreateSaveViewType" xml:space="preserve">
    <value>Backup Type</value>
  </data>
  <data name="CreateSaveViewComplete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="CreateSaveViewDifferential" xml:space="preserve">
    <value>Differential</value>
  </data>
  <data name="CreateSaveViewName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="CreateSaveViewSrcPath" xml:space="preserve">
    <value>Source Path</value>
  </data>
  <data name="AboutViewTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutViewSoftName" xml:space="preserve">
    <value>Software name :</value>
  </data>
  <data name="AboutViewCreator" xml:space="preserve">
    <value>Creator :</value>
  </data>
  <data name="AboutViewVersion" xml:space="preserve">
    <value>Version :</value>
  </data>
  <data name="AboutViewAuthors" xml:space="preserve">
    <value>Authors :</value>
  </data>
  <data name="SettingsViewProcess" xml:space="preserve">
    <value>Master Process :</value>
  </data>
  <data name="HomeViewExtension" xml:space="preserve">
    <value>Extensions to cipher</value>
  </data>
  <data name="SaveCreatedStatus" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="SaveStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SaveFinished" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="SaveInProgress" xml:space="preserve">
    <value>In progress</value>
  </data>
  <data name="SaveProgress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="ToolTipLogTypeSelection" xml:space="preserve">
    <value>Choose the log file format.</value>
  </data>
  <data name="ToolTipLanguageSelection" xml:space="preserve">
    <value>Select the application's language.</value>
  </data>
  <data name="ToolTipMasterProcessPath" xml:space="preserve">
      <value>Enter the full path of the master process.</value>
  </data>
  <data name="ToolTipMaxFileSize" xml:space="preserve">
      <value>Set the maximum size for files to be backed up in parallel (allows for better processing performance).</value>
  </data>
  <data name="ToolTipFileExtensions" xml:space="preserve">
      <value>Select the file extensions to be prioritized in the backup.</value>
  </data>
  <data name="ToolTipLogTypeSelection2" xml:space="preserve">
    <value>Select XML or JSON for the log format.</value>
  </data>
  <data name="ToolTipLanguageSelection2" xml:space="preserve">
      <value>Choose between English and French.</value>
  </data>
  <data name="ToolTipMaxFileSize2" xml:space="preserve">
      <value>Check the types of files to encrypt.</value>
  </data>
  <data name="ToolTipMasterProcessPath2" xml:space="preserve">
      <value>Enter the full path of the master process.</value>
  </data>
  <data name="ToolTipFileExtensions2" xml:space="preserve">
    <value>Check the types of files to prioratize.</value>
  </data>
  <data name="SettingsViewMaxFileSizes" xml:space="preserve">
      <value>File Size</value>
  </data>
  <data name="SettingsViewFileExtensions" xml:space="preserve">
      <value>Extensions of files to prioritize</value>
  </data>
  <data name="SPVMSaveFinished1" xml:space="preserve">
    <value>The backup </value>
  </data>
  <data name="SVPMAllSaveFinished" xml:space="preserve">
    <value>All backups are finished</value>
  </data>
  <data name="SPVMSaveFinished2" xml:space="preserve">
    <value> is finished</value>
  </data>
  <data name="SVPMLangChang" xml:space="preserve">
    <value>Changes applied successfully!</value>
  </data>
  <data name="CBJVMUnknownPath" xml:space="preserve">
    <value>One or more specified paths do not exist.</value>
  </data>
  <data name="CBJVMUnknownPathCapt" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="SVPMLangChangCapt" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="DiffSaveCipherFile" xml:space="preserve">
    <value>The file you want to backup already exists as an encrypted file. Do you want to save it as is or perform the differential backup process on the encrypted file? The file will be saved encrypted.</value>
  </data>
  <data name="DiffSaveCipherFileCaption" xml:space="preserve">
    <value>Existing Encrypted File</value>
  </data>
  <data name="CSCProcessRunning1" xml:space="preserve">
    <value>The process </value>
  </data>
  <data name="CSCProcessRunning2" xml:space="preserve">
    <value> is running. Please close all its instances to resume backup.</value>
  </data>
  <data name="CSCProcessRunningCapt" xml:space="preserve">
    <value>Process Running</value>
  </data>
  <data name="CSCAllProcessClosed1" xml:space="preserve">
    <value>All processes of </value>
  </data>
  <data name="CSCAllProcessClosed2" xml:space="preserve">
    <value> have been closed, resuming backup</value>
  </data>
  <data name="CSCAllProcessClosedCapt" xml:space="preserve">
  <value>Backup Resumption</value>
  </data>
</root>